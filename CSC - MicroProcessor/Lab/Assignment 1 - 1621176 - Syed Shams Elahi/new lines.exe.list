EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
new lines.exe -- emu8086 assembler version: 4.08  
 
[ 12-Oct-18  --  5:12:31 PM ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       .MODEL SMALL
[   2]        :                                       
[   3]        :                                       .STACK
[   4]        :                                       
[   5]        :                                       .DATA
[   6]        :                                       
[   7]    0100: 48 45 4C 4C 4F 20 57 4F 52 4C 44 20   STRING1 DB ‘HELLO WORLD $’                            ; declaring string
                24                                  
[   8]        :                                       
[   9]    010D: 0A 0D 47 4F 4F 44 20 4D 4F 52 4E 49   STRING2 DB 10, 13, ‘GOOD MORNING $’            ; declaring string
                4E 47 20 24                         
[  10]        :                                       
[  11]    011D: 0A 0D 48 41 56 45 20 47 4F 4F 44 20   STRING3 DB 10, 13, ‘HAVE GOOD DAY $’            ; declaring string
                44 41 59 20 24                      
[  12]        :                                       
[  13]        :                                       .CODE
[  14]        :                                       
[  15]    0130:                                       MAIN PROC                                                                   ; main procedure
[  16]        :                                       
[  17]    0130: B8 10 00                              MOV AX, @DATA                                                         ; initialize the data segment
[  18]        :                                       
[  19]    0133: 8E D8                                 MOV DS, AX
[  20]        :                                       
[  21]    0135: BA 00 00                              LEA DX, STRING1                                                        ; loading the effective address
[  22]        :                                       
[  23]    0138: B4 09                                 MOV AH, 09H                                                               ; for string display
[  24]        :                                       
[  25]    013A: CD 21                                 INT 21H                                                                          ; dos interrupt function
[  26]        :                                       
[  27]    013C: BA 0D 00                              LEA DX, STRING2                                                       ; loading the effective address
[  28]        :                                       
[  29]    013F: B4 09                                 MOV AH, 09H                                                               ; for string display
[  30]        :                                       
[  31]    0141: CD 21                                 INT 21H                                                                           ; dos interrupt function
[  32]        :                                       
[  33]    0143: BA 1D 00                              LEA DX, STRING3                                                        ; loading the effective address
[  34]        :                                       
[  35]    0146: B4 09                                 MOV AH, 09H                                                                ; for string display
[  36]        :                                       
[  37]    0148: CD 21                                 INT 21H                                                                           ; dos interrupt function
[  38]        :                                       
[  39]    014A: B8 00 4C                              MOV AX, 4C00H                                                           ; end request
[  40]        :                                       
[  41]    014D: CD 21                                 INT 21H
[  42]        :                                       
[  43]        :                                       MAIN ENDP                                                                   ; end procedure
[  44]        :                                       
[  45]        :                                       END MAIN                                                                      ; end program
[  46]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: 4F      -   bytes on last page (l.byte)
0003: 01      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 01      -   SP - stack pointer (h.byte)
0012: B2      -   check sum (l.byte)
0013: 58      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 13      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 13      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
